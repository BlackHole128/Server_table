{"ast":null,"code":"var _jsxFileName = \"F:\\\\React table 2\\\\server-table\\\\src\\\\ServerTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServerTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    axios.get(\"http://localhost:5000/api/servers\").then(response => setData(response.data)).catch(error => console.error(\"Error fetching servers:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sl.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Service Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Purpose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"HDD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((service, index) => [...service.production, ...service.devUAT].map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [rowIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: service.production.length + service.devUAT.length,\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this), rowIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: service.production.length + service.devUAT.length,\n            children: service.serviceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.purpose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.cpu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.memory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.hdd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, row.detail_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ServerTable, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ServerTable;\nexport default ServerTable;\nvar _c;\n$RefreshReg$(_c, \"ServerTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ServerTable","_s","data","setData","fetchData","get","then","response","catch","error","console","children","border","fileName","_jsxFileName","lineNumber","columnNumber","map","service","index","production","devUAT","row","rowIndex","rowSpan","length","serviceName","purpose","cpu","memory","hdd","status","detail_id","_c","$RefreshReg$"],"sources":["F:/React table 2/server-table/src/ServerTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ServerTable = () => {\r\n  const [data, setData] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    axios.get(\"http://localhost:5000/api/servers\")\r\n      .then((response) => setData(response.data))\r\n      .catch((error) => console.error(\"Error fetching servers:\", error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Sl.</th>\r\n            <th>Service Name</th>\r\n            <th>Purpose</th>\r\n            <th>CPU</th>\r\n            <th>Memory</th>\r\n            <th>HDD</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((service, index) =>\r\n            [...service.production, ...service.devUAT].map((row, rowIndex) => (\r\n              <tr key={row.detail_id}>\r\n                {rowIndex === 0 && (\r\n                  <td rowSpan={service.production.length + service.devUAT.length}>{index + 1}</td>\r\n                )}\r\n                {rowIndex === 0 && (\r\n                  <td rowSpan={service.production.length + service.devUAT.length}>{service.serviceName}</td>\r\n                )}\r\n                <td>{row.purpose}</td>\r\n                <td>{row.cpu}</td>\r\n                <td>{row.memory}</td>\r\n                <td>{row.hdd}</td>\r\n                <td>{row.status}</td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}