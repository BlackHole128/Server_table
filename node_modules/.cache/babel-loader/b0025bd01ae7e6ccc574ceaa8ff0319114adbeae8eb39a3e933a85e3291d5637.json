{"ast":null,"code":"var _jsxFileName = \"F:\\\\React table 2\\\\server-table\\\\src\\\\ServerTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServerTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    axios.get(\"http://localhost:5000/api/servers\").then(response => setData(response.data)).catch(error => console.error(\"Error fetching servers:\", error));\n  };\n\n  // ✅ Update Row in Database\n  const updateRow = (id, updatedRow) => {\n    axios.put(`http://localhost:5000/api/server-details/${id}`, updatedRow).then(() => {\n      setData(data.map(service => ({\n        ...service,\n        production: service.production.map(p => p.detail_id === id ? updatedRow : p),\n        devUAT: service.devUAT.map(d => d.detail_id === id ? updatedRow : d)\n      })));\n    }).catch(error => console.error(\"Error updating server:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sl.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Service Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Purpose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"HDD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((service, index) => [...service.production, ...service.devUAT].map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [rowIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: service.production.length + service.devUAT.length,\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this), rowIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: service.production.length + service.devUAT.length,\n            children: service.serviceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: row.purpose,\n              onChange: e => updateRow(row.detail_id, {\n                ...row,\n                purpose: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: row.cpu,\n              onChange: e => updateRow(row.detail_id, {\n                ...row,\n                cpu: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: row.memory,\n              onChange: e => updateRow(row.detail_id, {\n                ...row,\n                memory: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: row.hdd,\n              onChange: e => updateRow(row.detail_id, {\n                ...row,\n                hdd: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: row.status,\n              onChange: e => updateRow(row.detail_id, {\n                ...row,\n                status: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, row.detail_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ServerTable, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ServerTable;\nexport default ServerTable;\nvar _c;\n$RefreshReg$(_c, \"ServerTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ServerTable","_s","data","setData","fetchData","get","then","response","catch","error","console","updateRow","id","updatedRow","put","map","service","production","p","detail_id","devUAT","d","children","border","fileName","_jsxFileName","lineNumber","columnNumber","index","row","rowIndex","rowSpan","length","serviceName","type","value","purpose","onChange","e","target","cpu","memory","hdd","status","_c","$RefreshReg$"],"sources":["F:/React table 2/server-table/src/ServerTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ServerTable = () => {\r\n  const [data, setData] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    axios.get(\"http://localhost:5000/api/servers\")\r\n      .then((response) => setData(response.data))\r\n      .catch((error) => console.error(\"Error fetching servers:\", error));\r\n  };\r\n\r\n  // ✅ Update Row in Database\r\n  const updateRow = (id, updatedRow) => {\r\n    axios.put(`http://localhost:5000/api/server-details/${id}`, updatedRow)\r\n      .then(() => {\r\n        setData(data.map((service) => ({\r\n          ...service,\r\n          production: service.production.map((p) => (p.detail_id === id ? updatedRow : p)),\r\n          devUAT: service.devUAT.map((d) => (d.detail_id === id ? updatedRow : d))\r\n        })));\r\n      })\r\n      .catch((error) => console.error(\"Error updating server:\", error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Sl.</th>\r\n            <th>Service Name</th>\r\n            <th>Type</th>\r\n            <th>Purpose</th>\r\n            <th>CPU</th>\r\n            <th>Memory</th>\r\n            <th>HDD</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((service, index) =>\r\n            [...service.production, ...service.devUAT].map((row, rowIndex) => (\r\n              <tr key={row.detail_id}>\r\n                {rowIndex === 0 && (\r\n                  <td rowSpan={service.production.length + service.devUAT.length}>{index + 1}</td>\r\n                )}\r\n                {rowIndex === 0 && (\r\n                  <td rowSpan={service.production.length + service.devUAT.length}>{service.serviceName}</td>\r\n                )}\r\n                <td>{row.type}</td>\r\n                <td><input value={row.purpose} onChange={(e) => updateRow(row.detail_id, { ...row, purpose: e.target.value })} /></td>\r\n                <td><input value={row.cpu} onChange={(e) => updateRow(row.detail_id, { ...row, cpu: e.target.value })} /></td>\r\n                <td><input value={row.memory} onChange={(e) => updateRow(row.detail_id, { ...row, memory: e.target.value })} /></td>\r\n                <td><input value={row.hdd} onChange={(e) => updateRow(row.detail_id, { ...row, hdd: e.target.value })} /></td>\r\n                <td><input value={row.status} onChange={(e) => updateRow(row.detail_id, { ...row, status: e.target.value })} /></td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}