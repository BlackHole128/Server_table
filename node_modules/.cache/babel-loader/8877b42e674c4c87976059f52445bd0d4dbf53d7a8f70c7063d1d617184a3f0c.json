{"ast":null,"code":"var _jsxFileName = \"F:\\\\React table 2\\\\server-table\\\\src\\\\ServerTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport \"./ServerTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServerTable = () => {\n  _s();\n  // Load data from localStorage to persist after refresh\n  const [data, setData] = useState(() => {\n    const savedData = localStorage.getItem(\"serverData\");\n    return savedData ? JSON.parse(savedData) : [{\n      serviceName: \"Leads (tahmida)\",\n      production: [{\n        purpose: \"Database\",\n        cpu: \"1\",\n        memory: \"2\",\n        hdd: \"2\",\n        status: \"2\"\n      }, {\n        purpose: \"Application\",\n        cpu: \"\",\n        memory: \"\",\n        hdd: \"\",\n        status: \"\"\n      }, {\n        purpose: \"Others\",\n        cpu: \"\",\n        memory: \"\",\n        hdd: \"\",\n        status: \"\"\n      }],\n      devUAT: [{\n        purpose: \"Database\",\n        cpu: 4,\n        memory: 8,\n        hdd: 150,\n        status: \"1\"\n      }, {\n        purpose: \"Application\",\n        cpu: 4,\n        memory: 8,\n        hdd: 150,\n        status: \"2\"\n      }, {\n        purpose: \"Other (FS)\",\n        cpu: 4,\n        memory: 8,\n        hdd: 150,\n        status: \"3\"\n      }]\n    }];\n  });\n\n  // Save data to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"serverData\", JSON.stringify(data));\n  }, [data]);\n\n  // Function to add a new service row\n  const addRow = () => {\n    console.log(\"Add Service Clicked!\");\n    const newRow = {\n      serviceName: \"New Service\",\n      production: [{\n        purpose: \"Database\",\n        cpu: 4,\n        memory: 8,\n        hdd: 150,\n        status: \"Active\"\n      }, {\n        purpose: \"Application\",\n        cpu: \"\",\n        memory: \"\",\n        hdd: \"\",\n        status: \"\"\n      }, {\n        purpose: \"Others\",\n        cpu: \"\",\n        memory: \"\",\n        hdd: \"\",\n        status: \"\"\n      }],\n      devUAT: [{\n        purpose: \"Database\",\n        cpu: 4,\n        memory: 8,\n        hdd: 150,\n        status: \"Active\"\n      }, {\n        purpose: \"Application\",\n        cpu: 4,\n        memory: 8,\n        hdd: 150,\n        status: \"Pending\"\n      }, {\n        purpose: \"Other (FS)\",\n        cpu: 4,\n        memory: 8,\n        hdd: 150,\n        status: \"Completed\"\n      }]\n    };\n    setData(prevData => [...prevData, newRow]);\n  };\n\n  // Function to handle editing cells\n  const handleEdit = (serviceIndex, category, rowIndex, field, value) => {\n    const newData = [...data];\n    newData[serviceIndex][category][rowIndex][field] = value;\n    setData(newData);\n  };\n\n  // Function to download the table as a PDF\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n    const table = document.getElementById(\"table-to-download\");\n    if (!table) {\n      console.error(\"Table not found!\");\n      return;\n    }\n    let data = [];\n    let headers = [];\n\n    // Extract headers\n    const headerCells = table.querySelectorAll(\"thead tr th\");\n    headers = Array.from(headerCells).map(header => header.innerText.trim());\n\n    // Extract table rows\n    const rows = table.querySelectorAll(\"tbody tr\");\n    rows.forEach(row => {\n      let rowData = [];\n      const cells = row.querySelectorAll(\"td input\");\n      cells.forEach(cell => {\n        rowData.push(cell.value.trim());\n      });\n      data.push(rowData);\n    });\n\n    // Generate PDF table correctly\n    autoTable(doc, {\n      head: [headers],\n      body: data,\n      startY: 20,\n      theme: \"grid\",\n      styles: {\n        fontSize: 10,\n        cellPadding: 3\n      },\n      margin: {\n        top: 15\n      }\n    });\n    doc.save(\"server-table.pdf\");\n  };\n  const printTable = () => {\n    window.print();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"table-to-download\",\n      className: \"server-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"Sl.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"Service Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"5\",\n            children: \"Production Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"5\",\n            children: \"Dev/UAT Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Purpose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPU (Core)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Memory (GB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"HDD (GB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Purpose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPU (Core)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Memory (GB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"HDD (GB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((service, index) => service.production.map((prod, prodIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [prodIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: service.production.length,\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this), prodIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: service.production.length,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: service.serviceName,\n              onChange: e => handleEdit(index, \"serviceName\", 0, \"serviceName\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: prod.purpose,\n              onChange: e => handleEdit(index, \"production\", prodIndex, \"purpose\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: prod.cpu,\n              onChange: e => handleEdit(index, \"production\", prodIndex, \"cpu\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: prod.memory,\n              onChange: e => handleEdit(index, \"production\", prodIndex, \"memory\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: prod.hdd,\n              onChange: e => handleEdit(index, \"production\", prodIndex, \"hdd\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: prod.status,\n              onChange: e => handleEdit(index, \"production\", prodIndex, \"status\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: service.devUAT[prodIndex].purpose,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: service.devUAT[prodIndex].cpu,\n              onChange: e => handleEdit(index, \"devUAT\", prodIndex, \"cpu\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: service.devUAT[prodIndex].memory,\n              onChange: e => handleEdit(index, \"devUAT\", prodIndex, \"memory\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: service.devUAT[prodIndex].hdd,\n              onChange: e => handleEdit(index, \"devUAT\", prodIndex, \"hdd\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: service.devUAT[prodIndex].status,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)]\n        }, `${index}-${prodIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: addRow,\n      children: \"\\u2795 Add Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printTable,\n      children: \"\\uD83D\\uDDA8 Print Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(ServerTable, \"w6uwL/xh7VhJ3+vRITRtAQWqf2U=\");\n_c = ServerTable;\nexport default ServerTable;\nvar _c;\n$RefreshReg$(_c, \"ServerTable\");","map":{"version":3,"names":["React","useState","useEffect","jsPDF","autoTable","jsxDEV","_jsxDEV","ServerTable","_s","data","setData","savedData","localStorage","getItem","JSON","parse","serviceName","production","purpose","cpu","memory","hdd","status","devUAT","setItem","stringify","addRow","console","log","newRow","prevData","handleEdit","serviceIndex","category","rowIndex","field","value","newData","downloadPDF","doc","table","document","getElementById","error","headers","headerCells","querySelectorAll","Array","from","map","header","innerText","trim","rows","forEach","row","rowData","cells","cell","push","head","body","startY","theme","styles","fontSize","cellPadding","margin","top","save","printTable","window","print","className","children","id","rowSpan","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","service","index","prod","prodIndex","length","type","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["F:/React table 2/server-table/src/ServerTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport \"./ServerTable.css\";\r\n\r\nconst ServerTable = () => {\r\n  // Load data from localStorage to persist after refresh\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem(\"serverData\");\r\n    return savedData ? JSON.parse(savedData) : [\r\n      {\r\n        serviceName: \"Leads (tahmida)\",\r\n        production: [\r\n          { purpose: \"Database\", cpu: \"1\", memory: \"2\", hdd: \"2\", status: \"2\" },\r\n          { purpose: \"Application\", cpu: \"\", memory: \"\", hdd: \"\", status: \"\" },\r\n          { purpose: \"Others\", cpu: \"\", memory: \"\", hdd: \"\", status: \"\" },\r\n        ],\r\n        devUAT: [\r\n          { purpose: \"Database\", cpu: 4, memory: 8, hdd: 150, status: \"1\" },\r\n          { purpose: \"Application\", cpu: 4, memory: 8, hdd: 150, status: \"2\" },\r\n          { purpose: \"Other (FS)\", cpu: 4, memory: 8, hdd: 150, status: \"3\" },\r\n        ],\r\n      },\r\n    ];\r\n  });\r\n\r\n  // Save data to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"serverData\", JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  // Function to add a new service row\r\n  const addRow = () => {\r\n    console.log(\"Add Service Clicked!\");\r\n\r\n    const newRow = {\r\n      serviceName: \"New Service\",\r\n      production: [\r\n        { purpose: \"Database\", cpu: 4, memory: 8, hdd: 150, status: \"Active\" },\r\n        { purpose: \"Application\", cpu: \"\", memory: \"\", hdd: \"\", status: \"\" },\r\n        { purpose: \"Others\", cpu: \"\", memory: \"\", hdd: \"\", status: \"\" },\r\n      ],\r\n      devUAT: [\r\n        { purpose: \"Database\", cpu: 4, memory: 8, hdd: 150, status: \"Active\" },\r\n        { purpose: \"Application\", cpu: 4, memory: 8, hdd: 150, status: \"Pending\" },\r\n        { purpose: \"Other (FS)\", cpu: 4, memory: 8, hdd: 150, status: \"Completed\" },\r\n      ],\r\n    };\r\n\r\n    setData((prevData) => [...prevData, newRow]);\r\n  };\r\n\r\n  // Function to handle editing cells\r\n  const handleEdit = (serviceIndex, category, rowIndex, field, value) => {\r\n    const newData = [...data];\r\n    newData[serviceIndex][category][rowIndex][field] = value;\r\n    setData(newData);\r\n  };\r\n\r\n  // Function to download the table as a PDF\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    const table = document.getElementById(\"table-to-download\");\r\n\r\n    if (!table) {\r\n      console.error(\"Table not found!\");\r\n      return;\r\n    }\r\n\r\n    let data = [];\r\n    let headers = [];\r\n\r\n    // Extract headers\r\n    const headerCells = table.querySelectorAll(\"thead tr th\");\r\n    headers = Array.from(headerCells).map((header) => header.innerText.trim());\r\n\r\n    // Extract table rows\r\n    const rows = table.querySelectorAll(\"tbody tr\");\r\n    rows.forEach((row) => {\r\n      let rowData = [];\r\n      const cells = row.querySelectorAll(\"td input\");\r\n      cells.forEach((cell) => {\r\n        rowData.push(cell.value.trim());\r\n      });\r\n      data.push(rowData);\r\n    });\r\n\r\n    // Generate PDF table correctly\r\n    autoTable(doc, {\r\n      head: [headers],\r\n      body: data,\r\n      startY: 20,\r\n      theme: \"grid\",\r\n      styles: {\r\n        fontSize: 10,\r\n        cellPadding: 3,\r\n      },\r\n      margin: { top: 15 },\r\n    });\r\n\r\n    doc.save(\"server-table.pdf\");\r\n  };\r\n\r\n  const printTable = () => {\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <table id=\"table-to-download\" className=\"server-table\">\r\n        <thead>\r\n          <tr>\r\n            <th rowSpan=\"2\">Sl.</th>\r\n            <th rowSpan=\"2\">Service Name</th>\r\n            <th colSpan=\"5\">Production Server</th>\r\n            <th colSpan=\"5\">Dev/UAT Server</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Purpose</th>\r\n            <th>CPU (Core)</th>\r\n            <th>Memory (GB)</th>\r\n            <th>HDD (GB)</th>\r\n            <th>Status</th>\r\n            <th>Purpose</th>\r\n            <th>CPU (Core)</th>\r\n            <th>Memory (GB)</th>\r\n            <th>HDD (GB)</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((service, index) =>\r\n            service.production.map((prod, prodIndex) => (\r\n              <tr key={`${index}-${prodIndex}`}>\r\n                {prodIndex === 0 && (\r\n                  <td rowSpan={service.production.length}>{index + 1}</td>\r\n                )}\r\n                {prodIndex === 0 && (\r\n                  <td rowSpan={service.production.length}>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={service.serviceName}\r\n                      onChange={(e) =>\r\n                        handleEdit(index, \"serviceName\", 0, \"serviceName\", e.target.value)\r\n                      }\r\n                    />\r\n                  </td>\r\n                )}\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={prod.purpose}\r\n                    onChange={(e) =>\r\n                      handleEdit(index, \"production\", prodIndex, \"purpose\", e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={prod.cpu}\r\n                    onChange={(e) =>\r\n                      handleEdit(index, \"production\", prodIndex, \"cpu\", e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={prod.memory}\r\n                    onChange={(e) =>\r\n                      handleEdit(index, \"production\", prodIndex, \"memory\", e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={prod.hdd}\r\n                    onChange={(e) =>\r\n                      handleEdit(index, \"production\", prodIndex, \"hdd\", e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={prod.status}\r\n                    onChange={(e) =>\r\n                      handleEdit(index, \"production\", prodIndex, \"status\", e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n\r\n                {/* Dev/UAT Server */}\r\n                <td>\r\n                  <input type=\"text\" value={service.devUAT[prodIndex].purpose} disabled />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={service.devUAT[prodIndex].cpu}\r\n                    onChange={(e) =>\r\n                      handleEdit(index, \"devUAT\", prodIndex, \"cpu\", e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={service.devUAT[prodIndex].memory}\r\n                    onChange={(e) =>\r\n                      handleEdit(index, \"devUAT\", prodIndex, \"memory\", e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={service.devUAT[prodIndex].hdd}\r\n                    onChange={(e) =>\r\n                      handleEdit(index, \"devUAT\", prodIndex, \"hdd\", e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={service.devUAT[prodIndex].status} disabled />\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <button className=\"add-btn\" onClick={addRow}>➕ Add Service</button>\r\n      <button onClick={printTable}>🖨 Print Table</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}